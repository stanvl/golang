server: 
  port:  ${dev.server.port:7915}

spring:

  application:
      name: ${dev.spring.application.name:provider-user-dubbo}

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest


  #缓存配置
  redis: 
     database: ${dev.spring.redis.database:1}
     host: ${dev.spring.redis.host:192.168.1.225}
     port: ${dev.spring.redis.port:6379}
     password: ${dev.spring.redis.password:myredis}
     timeout: ${dev.spring.redis.timeout:0}
     pool:
         max-active: ${dev.spring.redis.pool.max-active:20}
         min-idle: ${dev.spring.redis.pool.min-idle:5}
         max-idle: ${dev.spring.redis.pool.max-idle:10}
         max-wait: ${dev.spring.redis.pool.max-wait:-1}
  #dubbo配置
  dubbo:
    application.name: user-facade-consumer
    registry.address: zookeeper://localhost:2181
    protocol.name: dubbo
    protocol.port: 20901
    scan: com.kingthy.service.impl


#缓存超时设置(分钟)
cache:
   nullValueExpire: 8


eureka:
  client:
    serviceUrl:
       #defaultZone: ${dev.eureka.client.serviceUrl.defaultZone:http://192.168.6.195:10000/eureka/}
       defaultZone: http://localhost:10000/eureka
  instance:
    #心跳时间，服务续约间隔时间 （默认30秒）
    lease-renewal-interval-in-seconds: 2
    #发呆时间，服务续约到期时间（缺省90秒）
    lease-expiration-duration-in-seconds: 2
    prefer-ip-address: true
logging:
  level:
    com.kingthy.service.impl: DEBUG
    com.kingthy.mapper: DEBUG

hystrix:
  #配置是否开启熔断，默认true
  command.default.circuitBreaker.enabled: true
  #超时阀值，默认1000毫秒#
  command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
  #熔断后，相隔多长时间，发起重试，默认5000毫秒#
  command.default.circuitBreaker.sleepWindowInMilliseconds: 5000
  #当在配置时间窗口内达到此数量的失败后，进行短路。默认20个#
  command.default.circuitBreaker.requestVolumeThreshold: 20
  #出错百分比阈值，当达到此阈值后，开始短路。默认50%#
  command.default.circuitBreaker.errorThresholdPercentage: 50


websocket:
   remote-address: ws://192.168.7.193:9090/websocket

