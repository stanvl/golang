server:
  port: ${pre.server.port:7819}

spring:
  application:
    name: ${pre.spring.application.name:provider-rabbitmq-dubbo}
  rabbitmq:
    host: ${pre.rabbitmq.host:192.168.1.225}
    port: ${pre.rabbitmq.port:5672}
    username: ${pre.rabbitmq.username:admin}
    password: ${pre.rabbitmq.password:Jxkj2016}
    listener:
      default-requeue-rejected: ${pre.rabbitmq.listener.default-requeue-rejected:false}
      max-concurrency: ${pre.rabbitmq.listener.max-concurrency:10}
      concurrency: ${pre.rabbitmq.listener.concurrency:2}

  data:
      elasticsearch:
        cluster-nodes: ${pre.elasticsearch.cluster.nodes:192.168.1.237:9300}
  redis:
         database: ${pre.spring.redis.database:1}
         host: ${pre.spring.redis.host:192.168.1.225}
         port: ${pre.spring.redis.port:6379}
         password: ${pre.spring.redis.password:myredis}
         timeout: ${pre.spring.redis.timeout:0}
         pool:
             max-active: ${pre.spring.redis.pool.max-active:20}
             min-idle: ${pre.spring.redis.pool.min-idle:5}
             max-idle: ${pre.spring.redis.pool.max-idle:10}
             max-wait: ${pre.spring.redis.pool.max-wait:-1}
  dubbo:
    application.name: rabbitmq-facade-consumer
    registry.address: ${pre.dubbo.address:zookeeper://192.168.7.185:2181}
    protocol.name: dubbo
    protocol.port: ${pre.dubbo.protocol.port:20900}
    scan: com.kingthy.service.impl

eureka:
  client:
    serviceUrl:
      defaultZone: ${pre.eureka.client.serviceUrl.defaultZone:http://192.168.1.225:10000/eureka/}
#      defaultZone: http://192.168.1.225:10000/eureka/
  instance:
    lease-renewal-interval-in-seconds: ${pre.lease-renewal-interval-in-seconds:2}
    lease-expiration-duration-in-seconds: ${pre.lease-expiration-duration-in-seconds:2}
    prefer-ip-address: true

#hystrix:
#    command.default.execution.isolation.thread.timeoutInMilliseconds: 5000

logging:
  level:
    com.kingthy.service.impl: ${pre.com.kingthy.service.impl:debug}
