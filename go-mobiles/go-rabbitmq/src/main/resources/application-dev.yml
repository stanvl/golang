server:
  port: ${dev.server.port:7819}

spring:
  application:
    name: ${dev.spring.application.name:provider-rabbitmq}
  rabbitmq:
    host: ${dev.rabbitmq.host:localhost}
    port: ${dev.rabbitmq.port:5672}
    username: ${dev.rabbitmq.username:guest}
    password: ${dev.rabbitmq.password:guest}
    listener:
      default-requeue-rejected: ${dev.rabbitmq.listener.default-requeue-rejected:false}
      max-concurrency: ${dev.rabbitmq.listener.max-concurrency:10}
      concurrency: ${dev.rabbitmq.listener.concurrency:2}
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    #${dev.spring.datasource.url}
#    url: jdbc:mysql://192.168.1.191:3306/zmshop?characterEncoding=UTF-8
    url: ${dev.spring.datasource.url:jdbc:mysql://192.168.1.191:3306/zmshop?characterEncoding=UTF-8}
    #
    username: ${dev.spring.datasource.username:root}
#    username: ${dev.spring.datasource.username}
    #${dev.spring.datasource.password}
    password: ${dev.spring.datasource.password:root}
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      connection-test-query: ${dev.spring.datasource.hikari.connection-test-query:select 1 from dual}
      #${dev.spring.datasource.hikari.connection-timeout:30000}
      connection-timeout: ${dev.spring.datasource.hikari.connection-timeout:30000}
#      connection-timeout: ${dev.spring.datasource.hikari.connection-timeout}
      #${dev.spring.datasource.hikari.idle-timeout}
      idle-timeout: ${dev.spring.datasource.hikari.idle-timeout:60000}
      max-lifetime: ${dev.spring.datasource.hikari.max-lifetime:1800000}
      maximum-pool-size: ${dev.spring.datasource.hikari.maximum-pool-size:10}
      minimum-idle: ${dev.spring.datasource.hikari.minimum-idle:10}

    data:
      elasticsearch:
        properties:
  #          logs: E:\144\elasticsearch-5.4.0\logs
  #          path: E:\144\elasticsearch-5.4.0\data
            path.home: target/elastic
  #          index.search.slowlog.threshold.query.info: 1ms
  #      cluster-nodes: 192.168.1.237:9300
        cluster-nodes: localhost:9300


  redis:
       database: ${dev.spring.redis.database:1}
       host: ${dev.spring.redis.host:192.168.1.225}
       port: ${dev.spring.redis.port:6379}
       password: ${dev.spring.redis.password:myredis}
       timeout: ${dev.spring.redis.timeout:0}
       pool:
           max-active: ${dev.spring.redis.pool.max-active:20}
           min-idle: ${dev.spring.redis.pool.min-idle:5}
           max-idle: ${dev.spring.redis.pool.max-idle:10}
           max-wait: ${dev.spring.redis.pool.max-wait:-1}


eureka:
  client:
    serviceUrl:
      defaultZone: ${dev.eureka.client.serviceUrl.defaultZone:http://192.168.6.111:10000/eureka/}
#      defaultZone: http://192.168.1.225:10000/eureka/
  instance:
    lease-renewal-interval-in-seconds: ${dev.lease-renewal-interval-in-seconds:2}
    lease-expiration-duration-in-seconds: ${dev.lease-expiration-duration-in-seconds:2}

#hystrix:
#    command.default.execution.isolation.thread.timeoutInMilliseconds: 5000

logging:
  level:
    com.kingthy.service.impl: ${dev.com.kingthy.service.impl:debug}
