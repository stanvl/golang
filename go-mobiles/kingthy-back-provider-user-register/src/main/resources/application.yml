server: 
  port:  ${dev.server.port:7919}
  tomcat:
    uri-encoding: UTF-8

spring:

  application:
    name: ${dev.spring.application.name:provider-member-regist-dubbo}
  redis:
      database: ${dev.spring.redis.database:1}
      host: ${dev.spring.redis.host:192.168.1.225}
      port: ${dev.spring.redis.port:6379}
      password: ${dev.spring.redis.password:myredis}
      timeout: ${dev.spring.redis.timeout:0}
      pool:
        max-active: ${dev.spring.redis.pool.max-active:20}
        min-idle: ${dev.spring.redis.pool.min-idle:5}
        max-idle: ${dev.spring.redis.pool.max-idle:10}
        max-wait: ${dev.spring.redis.pool.max-wait:-1}
  dubbo:
    application.name: user-register-facade-consumer
    registry.address: zookeeper://localhost:2181
    protocol.name: dubbo
    protocol.port: 20902
    scan: com.kingthy.service.impl
    #filter: hystrixfilter
eureka:
  client:
    serviceUrl:
      #defaultZone: ${dev.eureka.client.serviceUrl.defaultZone:http://192.168.1.225:10000/eureka/}
      defaultZone: http://localhost:10000/eureka/
  instance:
    #心跳时间，服务续约间隔时间 （默认30秒）
    lease-renewal-interval-in-seconds: 2
    #发呆时间，服务续约到期时间（缺省90秒）
    lease-expiration-duration-in-seconds: 2
    prefer-ip-address: true
logging:
  level:
    com.kingthy.service.impl: DEBUG 

hystrix:

    #超时阀值，默认1000毫秒#
  command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
    #熔断后，相隔多长时间，发起重试，默认5000毫秒#
  command.default.circuitBreaker.sleepWindowInMilliseconds: 10000
    #当在配置时间窗口内达到此数量的失败后，进行短路。默认20个#
  command.default.circuitBreaker.requestVolumeThreshold: 20
    #出错百分比阈值，当达到此阈值后，开始短路。默认50%#
  command.default.circuitBreaker.errorThresholdPercentage: 50


  # 线程池核心线程数,默认10
  #threadpool.default.coreSize: 200
  # 当实际线程数超过核心线程数时，线程存活时间，默认1分钟
  #threadpool.default.keepAliveTimeMinutes: 1
  # 最大等待队列数
  #threadpool.default.maxQueueSize: 200
  # 允许在队列中的等待的任务数量，请求拒绝临界值，默认5
  #threadpool.default.queueSizeRejectionThreshold: 5

#缓存超时设置(分钟)
cache:
   nullValueExpire: 8